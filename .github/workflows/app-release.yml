name: Create a release of ESQL

on:
  push:
    tags:
      - 'v*'

jobs:
  create-gh-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.3

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          body: |
            See [CHANGELOG.md](https://github.com/dainiusjocas/elasticsearch-sql/blob/main/CHANGELOG.md) for details.
            If you are using macOS Catalina and later you may need to remove the quarantine attribute from the bits before you can use them. To do this, run the following:
            ```
            sudo xattr -r -d com.apple.quarantine lmgrep
            ```
          draft: true

  build-uberjar-upload-to-release-and-store-artifacts:
    needs: [ create-gh-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Set env variable with the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v3.5.3

      - name: Prepare java
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Install clojure tools-deps`
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: '1.11.1.1347'
          bb: '1.3.181'

      - name: Compile uberjar
        run: |
          echo $RELEASE_VERSION > resources/ESQL_VERSION
          bb uberjar
          cp target/esql.jar target/esql-${RELEASE_VERSION}-standalone.jar

      - name: Upload uberjar to the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            target/esql-*-standalone.jar

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: uberjar
          path: |
            target/esql.jar
            resources/ESQL_VERSION

  build-uberscript-and-upload-to-release:
    needs: [ create-gh-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Set env variable with the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v3.5.3

      - name: Install clojure tools-deps`
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.11.1.1347'
          bb: '1.3.181'

      - name: Compile uberscript
        run: |
          echo $RELEASE_VERSION > resources/ESQL_VERSION
          mkdir target
          bb prepare-uberscript

      - name: Upload uberjar to the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            target/esql.clj

  build-native-executables-and-upload-to-release:
    name: Native image build on ${{ matrix.os }}
    needs: [ build-uberjar-upload-to-release-and-store-artifacts ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [
          ubuntu-latest,
          ubuntu-20.04,
          macos-latest,
          windows-latest
        ]
        include:
          - os: ubuntu-latest
            platform: linux
            gu-binary: gu
            arch: 'amd64'
            native-image-musl: 'false'
            static-suffix: ''
          - os: ubuntu-20.04
            platform: linux
            gu-binary: gu
            arch: 'amd64'
            native-image-musl: 'true'
            static-suffix: '-static'
          - os: macos-latest
            platform: macos
            gu-binary: gu
            arch: 'amd64'
            native-image-musl: 'false'
            static-suffix: ''
          - os: windows-latest
            platform: windows
            gu-binary: gu.exe
            arch: 'amd64'
            native-image-musl: 'false'
            static-suffix: ''
          - os: self-hosted
            platform: macos
            gu-binary: gu
            arch: 'aarch64'
            native-image-musl: 'false'
            static-suffix: ''
    steps:
      - name: Set env variable with the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v3.5.3

      - name: Setup Clojure
        uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: '1.11.1.1347'

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '20.0.1'
          distribution: 'graalvm'
          native-image-job-reports: 'true'
          native-image-musl: ${{ matrix.native-image-musl }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download uberjar from job 'build-uberjar-upload-to-release-and-store-artifacts'
        uses: actions/download-artifact@v3
        with:
          name: uberjar

      - name: Build native-image on *nix
        env:
          ESQL_STATIC: ${{ matrix.native-image-musl }}
          ESQL_MUSL: ${{ matrix.native-image-musl }}
        run: |
          bb only-native-image
          zip target/esql-${RELEASE_VERSION}-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.static-suffix }}.zip target/esql
        if: runner.os != 'Windows'

      - name: Build native-image on Windows and zip it
        run: |
          native-image.cmd -jar "target/esql.jar" -o esql --initialize-at-build-time --verbose --no-fallback -J-Xmx8g
          tar.exe -a -c -f target\esql-$env:GITHUB_REF_NAME-${{ matrix.platform }}-${{ matrix.arch }}.zip esql.exe
        if: runner.os == 'Windows'

      - name: Upload binaries to the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            target/esql-*-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.static-suffix }}.zip

      - name: Archive static native images as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: static-image
          path: target/esql
        if: matrix.native-image-musl == 'true'
