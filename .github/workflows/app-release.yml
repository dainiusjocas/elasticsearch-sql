name: Create a release of ESQL

on:
  push:
    tags:
      - 'v*'

env:
  BABASHKA_VERSION: '1.0.169'
  GRAALVM_VERSION: '22.3.0'

jobs:
  create-gh-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          body: |
            See [CHANGELOG.md](https://github.com/dainiusjocas/elasticsearch-sql/blob/main/CHANGELOG.md) for details.
            If you are using macOS Catalina and later you may need to remove the quarantine attribute from the bits before you can use them. To do this, run the following:
            ```
            sudo xattr -r -d com.apple.quarantine lmgrep
            ```
          draft: true

  build-uberjar-upload-to-release-and-store-artifacts:
    needs: [ create-gh-release ]
    runs-on: ubuntu-latest
    steps:
      - name: Set env variable with the release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Prepare java
        uses: actions/setup-java@v3.9.0
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Install clojure tools-deps`
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.11.1.1208'

      - name: Setup Babashka
        uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: ${{ env.BABASHKA_VERSION }}

      - name: Compile uberjar
        run: |
          echo $RELEASE_VERSION > resources/ESQL_VERSION
          bb uberjar
          cp target/esql.jar target/esql-${RELEASE_VERSION}-standalone.jar

      - name: Upload uberjar to the release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: true
          files: |
            target/esql-*-standalone.jar

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: uberjar
          path: |
            target/esql.jar
            resources/ESQL_VERSION

  build-native-executables-and-upload-to-release:
    name: Native image build on ${{ matrix.os }}
    needs: []
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        include:
          - os: ubuntu-20.04
            platform: linux
            gu-binary: gu
            arch: 'amd64'
            native-image-musl: 'true'
            static-suffix: '-static'
    steps:
      - name: Set env variable with the release version
        run: echo "RELEASE_VERSION=0.0.0" >> $GITHUB_ENV

      - name: Setup Babashka
        uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: ${{ env.BABASHKA_VERSION }}

      - uses: actions/checkout@v3.3.0
      - uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ env.GRAALVM_VERSION }}
          java-version: '17'
          components: 'native-image'
          native-image-musl: ${{ matrix.native-image-musl }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build native-image on *nix
        env:
          ESQL_STATIC: ${{ matrix.native-image-musl }}
          ESQL_MUSL: ${{ matrix.native-image-musl }}
        run: |
          bb native-image
          zip target/esql-${RELEASE_VERSION}-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.static-suffix }}.zip target/esql
        if: runner.os != 'Windows'
